{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\15403\\\\Desktop\\\\CS26\\\\front-end\\\\client\\\\src\\\\components\\\\map\\\\map.js\";\nimport React, { useEffect } from 'react';\nimport Sketch from 'react-p5';\nimport { connect } from 'react-redux';\nimport { getData, getInit } from '../../store/actions';\nlet playerUser;\nlet stoneRoom;\n\nfunction MapComponent(props) {\n  const {\n    mapData,\n    playerData,\n    initInfo,\n    isFetching,\n    error,\n    getData,\n    getInit\n  } = props;\n  useEffect(() => {\n    getData();\n    getInit();\n  }, [getData, getInit]);\n  console.log(initInfo);\n\n  let preload = p5 => {\n    playerUser = p5.loadImage('player.png');\n    stoneRoom = p5.loadImage('stone_room.png');\n  };\n\n  let setup = (p5, parentRef) => {\n    p5.createCanvas(600, 600).parent(parentRef);\n    p5.background(0, 0, 0, 15);\n    p5.noStroke();\n    p5.fill(125, 195, 255);\n  };\n\n  let draw = p5 => {\n    mapData.forEach(block => {\n      p5.square(block.x * 60 + 15, 600 - block.y * 60 - 45, 30);\n      p5.image(playerUser, initInfo.x * 60 + 10, 600 - initInfo.y * 60 - 50, 40, 40);\n\n      if (block.n_to) {\n        p5.rect(block.x * 60 + 15, 600 - (block.y + 1) * 60 - 30, 30, 50);\n      }\n\n      if (block.e_to) {\n        p5.rect(block.x * 60 + 30, 600 - block.y * 60 - 45, 50, 30);\n      }\n    });\n    p5.image(playerUser, initInfo.x * 60 + 10, 600 - initInfo.y * 60 - 50, 40, 40);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"mapCanvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \" \", React.createElement(Sketch, {\n    setup: setup,\n    draw: draw,\n    preload: preload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), \" \");\n}\n\nconst mapStateToProps = state => {\n  return {\n    mapData: state.mapData,\n    playerData: state.playerData,\n    initInfo: state.initInfo,\n    isFetching: state.isFetching,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getData,\n  getInit\n})(MapComponent);","map":{"version":3,"sources":["C:/Users/15403/Desktop/CS26/front-end/client/src/components/map/map.js"],"names":["React","useEffect","Sketch","connect","getData","getInit","playerUser","stoneRoom","MapComponent","props","mapData","playerData","initInfo","isFetching","error","console","log","preload","p5","loadImage","setup","parentRef","createCanvas","parent","background","noStroke","fill","draw","forEach","block","square","x","y","image","n_to","rect","e_to","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport Sketch from 'react-p5';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getData, getInit} from '../../store/actions';\r\n\r\nlet playerUser;\r\nlet stoneRoom;\r\n\r\nfunction MapComponent(props) {\r\n    const {mapData, playerData, initInfo, isFetching, error, getData, getInit} = props\r\n    \r\n    useEffect(() => {\r\n        getData()\r\n        getInit()\r\n    }, [getData, getInit])\r\n\r\n    console.log(initInfo)\r\n\r\n    let preload = p5 => {\r\n        playerUser = p5.loadImage('player.png');\r\n        stoneRoom = p5.loadImage('stone_room.png')\r\n      };\r\n    \r\n    let setup = (p5, parentRef) => {\r\n        p5.createCanvas(600, 600).parent(parentRef)\r\n        p5.background(0, 0, 0, 15);\r\n        p5.noStroke()\r\n        p5.fill(125, 195, 255)\r\n    };\r\n\r\n    let draw = p5 => {\r\n        mapData.forEach(block => {\r\n            p5.square(block.x * 60 + 15,600 - block.y * 60 - 45, 30);\r\n            p5.image(playerUser, initInfo.x * 60 + 10, 600 - initInfo.y * 60 - 50, 40, 40);\r\n            if (block.n_to) {\r\n              p5.rect(block.x * 60 + 15,600 - (block.y + 1) * 60 - 30, 30, 50);\r\n            }\r\n            if (block.e_to) {\r\n              p5.rect(block.x * 60 + 30, 600 - block.y * 60 - 45, 50, 30);\r\n            }\r\n          });\r\n          p5.image(playerUser, initInfo.x * 60 + 10, 600 - initInfo.y * 60 - 50, 40, 40);\r\n        };\r\n      \r\n        return <div className='mapCanvas'> <Sketch setup={setup} draw={draw} preload={preload}/> </div>;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n       mapData: state.mapData,\r\n       playerData: state.playerData,\r\n       initInfo: state.initInfo,\r\n       isFetching: state.isFetching,\r\n       error: state.error\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {getData, getInit})(MapComponent)\r\n"]},"metadata":{},"sourceType":"module"}