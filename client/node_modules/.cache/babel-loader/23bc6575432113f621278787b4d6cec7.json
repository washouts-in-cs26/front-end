{"ast":null,"code":"import axios from 'axios';\nimport { axiosWithAuth } from '../../utils/axiosWithAuth';\nexport const FETCH_DATA_START = \"FETCH_DATA_START\";\nexport const FETCH_DATA_SUCCESS = \"FETCH_DATA_SUCCESS\";\nexport const FETCH_DATA_FAILURE = \"FETCH_TRAILS_FAILURE\";\nexport const getData = () => {\n  return dispatch => {\n    dispatch({\n      type: FETCH_DATA_START\n    });\n    axios.get('https://web22washouts.herokuapp.com/api/adv/map') // add /map endpoint\n    .then(res => {\n      console.log('RESPONSE', res);\n      const roomData = res.data;\n      console.log('ROOMDATA', roomData);\n      dispatch({\n        type: FETCH_DATA_SUCCESS,\n        payload: roomData\n      });\n    }).catch(err => {\n      dispatch({\n        type: FETCH_DATA_FAILURE,\n        payload: `${err}`\n      });\n      console.log('fetching data failure', err);\n    });\n  };\n};\nexport const MOVE_PLAYER_SUCCESS = 'MOVE_PLAYER_SUCCESS';\nexport const MOVE_PLAYER_FAILURE = 'MOVE_PLAYER_FAILURE';\nexport const movePlayer = input => dispatch => {\n  axiosWithAuth().post(\"https://web22washouts.herokuapp.com/api/adv/move/\", {\n    direction: input\n  }) // add adv/move/ endpoint\n  .then(res => {\n    const moveData = res.data;\n    dispatch({\n      type: MOVE_PLAYER_SUCCESS,\n      payload: moveData\n    });\n    getInit(); // this will get our current player's room's description\n  }).catch(err => {\n    dispatch({\n      type: MOVE_PLAYER_FAILURE,\n      payload: `{err}`\n    });\n    console.log('move error: ', err);\n  });\n};\nexport const FETCH_INIT_START = \"FETCH_INIT_START\";\nexport const FETCH_INIT_SUCCESS = \"FETCH_INIT_SUCCESS\";\nexport const FETCH_INIT_FAILURE = \"FETCH_INIT_FAILURE\";\nexport const getInit = () => dispatch => {\n  dispatch({\n    type: FETCH_INIT_START\n  });\n  axiosWithAuth().get(\"https://web22washouts.herokuapp.com/api/adv/init\") // add /init endpoint\n  .then(response => {\n    dispatch({\n      type: FETCH_INIT_SUCCESS,\n      payload: response.data\n    });\n    console.log(\"getInit response\", response.data);\n  }).catch(err => {\n    dispatch({\n      type: FETCH_INIT_FAILURE,\n      payload: `${err}`\n    });\n    console.log(\"errrrrrror from getInit\", err);\n  });\n};","map":{"version":3,"sources":["C:/Users/15403/Desktop/CS26/front-end/client/src/store/actions/index.js"],"names":["axios","axiosWithAuth","FETCH_DATA_START","FETCH_DATA_SUCCESS","FETCH_DATA_FAILURE","getData","dispatch","type","get","then","res","console","log","roomData","data","payload","catch","err","MOVE_PLAYER_SUCCESS","MOVE_PLAYER_FAILURE","movePlayer","input","post","direction","moveData","getInit","FETCH_INIT_START","FETCH_INIT_SUCCESS","FETCH_INIT_FAILURE","response"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { axiosWithAuth } from '../../utils/axiosWithAuth';\r\n\r\nexport const FETCH_DATA_START = \"FETCH_DATA_START\"\r\nexport const FETCH_DATA_SUCCESS = \"FETCH_DATA_SUCCESS\"\r\nexport const FETCH_DATA_FAILURE = \"FETCH_TRAILS_FAILURE\"\r\n\r\nexport const getData = () => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch({ type: FETCH_DATA_START });\r\n\t\taxios\r\n\t\t\t.get('https://web22washouts.herokuapp.com/api/adv/map') // add /map endpoint\r\n\t\t\t.then((res) => {\r\n                console.log('RESPONSE', res)\r\n                const roomData = res.data\r\n                console.log('ROOMDATA', roomData)\r\n                dispatch({ type: FETCH_DATA_SUCCESS, payload: roomData})\r\n            })\r\n            .catch(err => {\r\n                dispatch({ type: FETCH_DATA_FAILURE, payload: `${err}` })\r\n                console.log('fetching data failure', err)\r\n            })\r\n\t};\r\n};\r\n\r\nexport const MOVE_PLAYER_SUCCESS = 'MOVE_PLAYER_SUCCESS'\r\nexport const MOVE_PLAYER_FAILURE = 'MOVE_PLAYER_FAILURE'\r\n\r\nexport const movePlayer = input => dispatch => {\r\n    axiosWithAuth().post(\"https://web22washouts.herokuapp.com/api/adv/move/\", {direction: input}) // add adv/move/ endpoint\r\n    .then(res => {\r\n        const moveData = res.data\r\n        dispatch({ type: MOVE_PLAYER_SUCCESS, payload: moveData })\r\n        getInit() // this will get our current player's room's description\r\n    })\r\n    .catch(err => {\r\n        dispatch({ type: MOVE_PLAYER_FAILURE, payload: `{err}` })\r\n        console.log('move error: ', err)\r\n    })\r\n}\r\n\r\nexport const FETCH_INIT_START = \"FETCH_INIT_START\"\r\nexport const FETCH_INIT_SUCCESS = \"FETCH_INIT_SUCCESS\"\r\nexport const FETCH_INIT_FAILURE = \"FETCH_INIT_FAILURE\"\r\n\r\nexport const getInit = () => dispatch => {\r\n    dispatch({type: FETCH_INIT_START})\r\n    axiosWithAuth().get(\"https://web22washouts.herokuapp.com/api/adv/init\") // add /init endpoint\r\n        .then(response => {\r\n            dispatch({type: FETCH_INIT_SUCCESS, payload: response.data})\r\n            console.log(\"getInit response\", response.data)\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: FETCH_INIT_FAILURE, payload: `${err}`})\r\n            console.log(\"errrrrrror from getInit\", err)\r\n        })\r\n}"]},"metadata":{},"sourceType":"module"}